[tox]
envlist =
  precommit,
  py{27,35,36,37,38},
  flake8,
  bandit,
  mypy,
  importlint,
  mkdocs,
  doctest,
  remarklint,
  yamllint,
  jscpd,
  commitlint
isolated_build = true

[testenv:precommit]
basepython = python3.8
skip_install = true
deps =
  pre-commit
commands_pre =
commands =
  pre-commit autoupdate
  pre-commit run --all-files
commands_post = sed -i 's/rev: .*$/rev: ""/g' .pre-commit-config.yaml
whitelist_externals = sed

[testenv]
deps =
  coverage
  pytest
  pytest-randomly
  pytest-timeout
  PyYAML
  tomlkit
commands_pre = pip install ./tests/helpers/.
commands = coverage run -m pytest {posargs}

[testenv:flake8]
basepython = python3.8
skip_install = true
deps =
  flake8
  flake8-2020
  flake8-bugbear
  flake8-builtins
  flake8-eradicate
  flake8-executable
  flake8-print
  flake8-pytest
  flake8-pytest-style
  flake8-tidy-imports
commands_pre =
commands = flake8

[testenv:bandit]
basepython = python3.8
skip_install = true
deps =
  bandit
commands_pre =
commands = bandit -r src/

[testenv:mypy]
basepython = python3.8
skip_install = true
deps =
  mypy
commands_pre =
commands = mypy src/

[testenv:importlint]
basepython = python3.8
deps =
  import-linter
commands_pre =
commands = lint-imports

[testenv:mkdocs]
basepython = python3.8
extras = mkdocs
deps =
commands_pre =
commands = mkdocs {posargs:build}

[testenv:doctest]
basepython = python3.8
deps =
  attrs
  celery
  coverage
  Django
  django-filter
  djangorestframework
  pytest
  requests
  responses
commands = coverage run -m mddoctest

[testenv:remarklint]
basepython = python3.8
skip_install = true
deps =
commands_pre =
commands =
  npm install
  npm run lint:md
whitelist_externals = npm

[testenv:yamllint]
basepython = python3.8
skip_install = true
deps =
  yamllint
commands_pre =
commands = yamllint --strict .

[testenv:jscpd]
basepython = python3.8
skip_install = true
deps =
commands_pre =
commands =
  npm install
  npm run lint:cp
whitelist_externals = npm

[testenv:commitlint]
basepython = python3.8
skip_install = true
deps =
commands =
  npm install
  npm run lint:git
whitelist_externals = npm
